<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.euler.community.mapper.AttentionMapper">

    <resultMap type="com.euler.community.domain.entity.Attention" id="AttentionResult">
        <result property="id" column="id"/>
        <result property="memberId" column="member_id"/>
        <result property="attentionUserId" column="attention_user_id"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>

    <resultMap type="com.euler.community.domain.vo.AttentionVo" id="AttentionListResult">
        <result property="id" column="id"/>
        <result property="memberId" column="member_id"/>
        <result property="attentionUserId" column="attention_user_id"/>
        <result property="status" column="status"/>
        <result property="nickName" column="nick_name"/>
        <result property="avatar" column="avatar"/>
        <result property="isOfficial" column="is_official"/>
        <result property="sex" column="sex"/>
    </resultMap>

    <!-- 查询我的关注列表-->
    <select id="getMyAttentionList" parameterType="Long" resultMap="AttentionListResult">
        select distinct a.id, a.member_id, a.attention_user_id, a.status, u.nick_name, u.avatar, u.is_official, u.sex
        from attention a
        join user_extend u on a.attention_user_id = u.member_id
        where a.member_id= #{memberId} and (a.status='2' or a.status ='3')
        order by a.create_time desc
    </select>

    <!-- 查询我的粉丝列表-->
    <select id="getMyFansList" parameterType="Long" resultMap="AttentionListResult">
        select distinct a.id, a.member_id, a.attention_user_id, u.nick_name, u.avatar, u.is_official, u.sex
        from attention a
        join user_extend u on a.member_id = u.member_id
        where a.attention_user_id= #{attentionUserId} and (a.status='2' or a.status ='3')
        order by a.create_time desc
    </select>

    <!-- 查询关注的数量-->
    <select id="getAttentionCount" parameterType="Long" resultType="java.lang.Integer">
        select count(*) from attention a
        join user_extend u on a.attention_user_id = u.member_id
        where a.member_id = #{memberId} and (a.status='2' or a.status='3') and a.del_flag = '0'
    </select>

    <!-- 查询粉丝的数量-->
    <select id="getFansCount" parameterType="Long" resultType="java.lang.Integer">
        select count(*) from attention a
        join user_extend u on a.member_id = u.member_id
        where a.attention_user_id = #{memberId} and (a.status='2' or a.status='3') and a.del_flag = '0'
    </select>

    <!-- 查询他人的关注列表-->
    <select id="getOthersAttentionList" parameterType="Long" resultMap="AttentionListResult">
        select distinct a.attention_user_id, u.nick_name, u.avatar, u.is_official, u.sex from (
            select distinct attention_user_id
            from attention
            where attention_user_id in (select attention_user_id from attention where member_id= #{memberId} and (status='2' or status ='3'))
            order by create_time desc
        ) a
        JOIN user_extend u ON a.attention_user_id = u.member_id
    </select>

    <!-- 查询他人的粉丝列表-->
    <select id="getOthersFansList" parameterType="Long" resultMap="AttentionListResult">
        select a.member_id, u.nick_name, u.avatar, u.is_official, u.sex from (
            select distinct member_id
            from attention
            where member_id in (select member_id from attention where attention_user_id = #{memberId} and (status='2' or status ='3'))
            order by create_time desc
        ) a
        JOIN user_extend u ON a.member_id = u.member_id
    </select>

    <!-- 查询我的新粉丝列表-->
    <select id="getMyNewAttentionList" resultMap="AttentionListResult">
        SELECT distinct
            a.id,
            a.member_id,
            a.attention_user_id,
            a.status,
            au.nick_name,
            au.avatar,
            au.is_official,
            au.sex
        FROM attention a
        left JOIN message_to_users u ON a.attention_user_id = u.to_user_id AND u.type='3' AND u.read_status='0' AND u.del_flag='0'
        JOIN user_extend au ON a.member_id = au.member_id
        ${ew.getCustomSqlSegment}
    </select>

    <!-- 根据昵称检索我的关注列表-->
    <select id="getMyAttentionListByName" resultMap="AttentionListResult">
        select distinct a.id, a.member_id, a.attention_user_id, a.status, u.nick_name, u.avatar, u.is_official, u.sex
        from attention a
        join user_extend u on a.attention_user_id = u.member_id
        ${ew.getCustomSqlSegment}
    </select>

    <!-- 根据昵称检索我的粉丝列表-->
    <select id="getMyFansListByName" resultMap="AttentionListResult">
        select distinct a.id, a.member_id, a.attention_user_id, a.status, u.nick_name, u.avatar, u.is_official, u.sex
        from attention a
        join user_extend u on a.member_id = u.member_id
        ${ew.getCustomSqlSegment}
    </select>

    <!-- 根据昵称检索他人的关注列表-->
    <select id="getOthersAttentionListByName" parameterType="com.euler.community.domain.dto.AttentionDto" resultMap="AttentionListResult">
         select a.attention_user_id, u.nick_name, u.avatar, u.is_official, u.sex from (
            select distinct attention_user_id
                from attention
                where attention_user_id in (select attention_user_id from attention where member_id= #{memberId} and (status='2' or status ='3'))
                order by create_time desc
            ) a
        JOIN user_extend u ON a.attention_user_id = u.member_id and u.nick_name like concat('%', #{nickName}, '%')
    </select>

    <!-- 根据昵称检索他人的粉丝列表-->
    <select id="getOthersFansListByName" parameterType="com.euler.community.domain.dto.AttentionDto" resultMap="AttentionListResult">
        select a.member_id, u.nick_name, u.avatar, u.is_official, u.sex from (
            select distinct member_id
            from attention
            where member_id in (select member_id from attention where attention_user_id = #{memberId} and (status='2' or status ='3'))
            order by create_time desc
        ) a
        JOIN user_extend u ON a.member_id = u.member_id and u.nick_name like concat('%', #{nickName}, '%')
    </select>

</mapper>
